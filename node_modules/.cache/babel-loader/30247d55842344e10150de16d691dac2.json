{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathangirma/code/hangman-react/src/components/CategoryPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport '../App.css';\nimport { beginWithWord } from '../helpers/helpers';\nimport { showNotification as show } from \"./helpers/helpers\";\nconst sports = ['eagles', 'flames', 'pelicans', 'heat', 'thunder', 'penguins', 'raptors', 'leafs', 'oilers', 'cowboys'];\nconst prog = ['python', 'ruby', 'java', 'scratch', 'javascript', 'typescript', 'bash', 'sql', 'swift', 'html'];\nconst initialMessage = \"Choose a Category\";\n\nconst CategoryPopup = ({\n  selectedWord,\n  correctLetters,\n  wrongLetters,\n  setShowNotification\n}) => {\n  _s();\n\n  function setIndex(i) {\n    this.setState({\n      selectedWord: beginWithWord(i, sports, prog),\n      playable: true\n    });\n  }\n\n  console.log(selectedWord);\n  let playable = this.state.playable;\n  useEffect(({\n    setShowNotification\n  }) => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (this.state.playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (this.state.selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            this.setState({\n              correctLetters: [...correctLetters, letter]\n            });\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            this.setState({\n              wrongLetters: [...wrongLetters, letter]\n            });\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-popup\",\n    style: selectedWord === ' ' ? {\n      display: 'flex'\n    } : {},\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: initialMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIndex(0),\n        children: \"Sports Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIndex(1),\n        children: \"Programming Languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryPopup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CategoryPopup;\nexport default CategoryPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryPopup\");","map":{"version":3,"sources":["/Users/jonathangirma/code/hangman-react/src/components/CategoryPopup.js"],"names":["React","useEffect","beginWithWord","showNotification","show","sports","prog","initialMessage","CategoryPopup","selectedWord","correctLetters","wrongLetters","setShowNotification","setIndex","i","setState","playable","console","log","state","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","window","addEventListener","removeEventListener","display"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\"\nimport '../App.css'\nimport {beginWithWord} from '../helpers/helpers'\nimport {showNotification as show} from \"./helpers/helpers\"\n\nconst sports = ['eagles', 'flames', 'pelicans', 'heat', 'thunder', 'penguins', 'raptors', 'leafs', 'oilers', 'cowboys'];\nconst prog = ['python', 'ruby', 'java', 'scratch', 'javascript', 'typescript', 'bash', 'sql', 'swift', 'html'];\nconst initialMessage = \"Choose a Category\";\n\nconst CategoryPopup = ({selectedWord, correctLetters, wrongLetters, setShowNotification}) => {\n  function setIndex(i) {\n    this.setState({\n      selectedWord: beginWithWord(i, sports, prog),\n      playable: true,\n    });\n  }\n  console.log(selectedWord);\n  let playable = this.state.playable;\n\n  useEffect(({setShowNotification}) => {\n      const handleKeydown = event => {\n        const { key, keyCode } = event;\n        if (this.state.playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n          if (this.state.selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              this.setState({correctLetters: [...correctLetters, letter]});\n            } else {\n              show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              this.setState({wrongLetters: [...wrongLetters, letter]});\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n      }\n      window.addEventListener('keydown', handleKeydown);\n\n      return () => window.removeEventListener('keydown', handleKeydown);\n    }, [correctLetters, wrongLetters, playable]);\n\n\n  return(\n    <div className=\"category-popup\" style={selectedWord === ' ' ? {display: 'flex'} : {}}>\n     <div className=\"c-popup\">\n       <h2>{initialMessage}</h2>\n       <button onClick={() => setIndex(0)}>Sports Teams</button>\n       <button onClick={() => setIndex(1)}>Programming Languages</button>\n     </div>\n   </div>\n  )\n}\n\n\nexport default CategoryPopup\n"]},"metadata":{},"sourceType":"module"}