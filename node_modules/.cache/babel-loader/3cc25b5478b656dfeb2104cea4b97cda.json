{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathangirma/code/hangman-react/src/components/CategoryPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport '../App.css';\nimport { beginWithWord } from '../helpers/helpers';\nimport { showNotification as show } from \"./helpers/helpers\";\nconst sports = ['eagles', 'flames', 'pelicans', 'heat', 'thunder', 'penguins', 'raptors', 'leafs', 'oilers', 'cowboys'];\nconst prog = ['python', 'ruby', 'java', 'scratch', 'javascript', 'typescript', 'bash', 'sql', 'swift', 'html'];\nconst initialMessage = \"Choose a Category\";\n\nconst CategoryPopup = ({\n  selectedWord\n}) => {\n  _s();\n\n  function setIndex(i) {\n    this.setState({\n      selectedWord: beginWithWord(i, sports, prog),\n      playable: true\n    });\n  }\n\n  console.log(selectedWord);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (this.state.playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!this.state.correctLetters.includes(letter)) {\n            setState({\n              correctLetters: [...currentLetters, letter]\n            });\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-popup\",\n    style: selectedWord === ' ' ? {\n      display: 'flex'\n    } : {},\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: initialMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIndex(0),\n        children: \"Sports Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIndex(1),\n        children: \"Programming Languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryPopup, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CategoryPopup;\nexport default CategoryPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryPopup\");","map":{"version":3,"sources":["/Users/jonathangirma/code/hangman-react/src/components/CategoryPopup.js"],"names":["React","useEffect","beginWithWord","showNotification","show","sports","prog","initialMessage","CategoryPopup","selectedWord","setIndex","i","setState","playable","console","log","handleKeydown","event","key","keyCode","state","letter","toLowerCase","includes","correctLetters","currentLetters","setShowNotification","wrongLetters","setWrongLetters","window","addEventListener","removeEventListener","display"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\"\nimport '../App.css'\nimport {beginWithWord} from '../helpers/helpers'\nimport {showNotification as show} from \"./helpers/helpers\"\n\nconst sports = ['eagles', 'flames', 'pelicans', 'heat', 'thunder', 'penguins', 'raptors', 'leafs', 'oilers', 'cowboys'];\nconst prog = ['python', 'ruby', 'java', 'scratch', 'javascript', 'typescript', 'bash', 'sql', 'swift', 'html'];\nconst initialMessage = \"Choose a Category\";\n\nconst CategoryPopup = ({selectedWord}) => {\n  function setIndex(i) {\n    this.setState({\n      selectedWord: beginWithWord(i, sports, prog),\n      playable: true,\n    });\n  }\n  console.log(selectedWord);\n\n  useEffect(() => {\n      const handleKeydown = event => {\n        const { key, keyCode } = event;\n        if (this.state.playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n          if (selectedWord.includes(letter)) {\n            if (!this.state.correctLetters.includes(letter)) {\n              setState({correctLetters: [...currentLetters, letter]});\n            } else {\n              show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              setWrongLetters(currentLetters => [...currentLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n      }\n      window.addEventListener('keydown', handleKeydown);\n\n      return () => window.removeEventListener('keydown', handleKeydown);\n    }, [correctLetters, wrongLetters, playable]);\n\n\n  return(\n    <div className=\"category-popup\" style={selectedWord === ' ' ? {display: 'flex'} : {}}>\n     <div className=\"c-popup\">\n       <h2>{initialMessage}</h2>\n       <button onClick={() => setIndex(0)}>Sports Teams</button>\n       <button onClick={() => setIndex(1)}>Programming Languages</button>\n     </div>\n   </div>\n  )\n}\n\n\nexport default CategoryPopup\n"]},"metadata":{},"sourceType":"module"}