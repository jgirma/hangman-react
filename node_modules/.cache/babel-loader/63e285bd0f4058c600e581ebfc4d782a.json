{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jonathangirma/code/hangman-react/src/components/Popup.js\";\nimport React from \"react\";\nimport { checkWin } from \"../helpers/helpers\";\n\nconst Popup = ({\n  correctLetters,\n  wrongLetters,\n  selectedWord,\n  setPlayable\n}) => {\n  let finalMessage = \"\";\n  let finalMessageRevealWord = \"\";\n  let playable = true;\n\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === \"win\") {\n    finalMessage = \"Congrats you Win!!\";\n    finalMessageRevealWord = selectedWord;\n    playable = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: finalMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: finalMessageRevealWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/Users/jonathangirma/code/hangman-react/src/components/Popup.js"],"names":["React","checkWin","Popup","correctLetters","wrongLetters","selectedWord","setPlayable","finalMessage","finalMessageRevealWord","playable"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA,YAA/B;AAA6CC,EAAAA;AAA7C,CAAD,KAA+D;AAC3E,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,sBAAsB,GAAG,EAA7B;AACA,MAAIC,QAAQ,GAAG,IAAf;;AAEA,MAAIR,QAAQ,CAACE,cAAD,EAAiBC,YAAjB,EAA+BC,YAA/B,CAAR,KAAyD,KAA7D,EAAmE;AACjEE,IAAAA,YAAY,GAAC,oBAAb;AACAC,IAAAA,sBAAsB,GAAGH,YAAzB;AACAI,IAAAA,QAAQ,GAAG,KAAX;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnBD;;KAAMN,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React from \"react\"\nimport {checkWin} from \"../helpers/helpers\"\n\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable}) => {\n  let finalMessage = \"\";\n  let finalMessageRevealWord = \"\";\n  let playable = true;\n\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === \"win\"){\n    finalMessage=\"Congrats you Win!!\";\n    finalMessageRevealWord = selectedWord;\n    playable = false;\n  }\n  return(\n    <div className=\"popup-container\">\n     <div className=\"popup\">\n       <h2>{finalMessage}</h2>\n       <h3>{finalMessageRevealWord}</h3>\n       <button>Play Again</button>\n     </div>\n   </div>\n  )\n}\n\nexport default Popup\n"]},"metadata":{},"sourceType":"module"}