{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathangirma/code/hangman-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Figure from \"./components/Figure\";\nimport WrongLetters from \"./components/WrongLetters\";\nimport Word from \"./components/Word\";\nimport Popup from \"./components/Popup\";\nimport Notification from \"./components/Notification\";\nimport { showNotification as show } from \"./helpers/helpers\";\nconst selectedWord = ' ';\n\nfunction App() {\n  _s();\n\n  const [playable, setPlayable] = useState(false);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain(i) {\n    setPlayable(false); // Empty Arrays\n\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    selectedWord = \" \";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Figure, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        selectedWord: selectedWord,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      correctLetters: correctLetters,\n      wrongLetters: wrongLetters,\n      selectedWord: selectedWord,\n      setPlayable: setPlayable,\n      playAgain: playAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"6moswnNGH+BMiO+taWLgV/YlcXA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonathangirma/code/hangman-react/src/App.js"],"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Popup","Notification","showNotification","show","selectedWord","App","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\"\nimport './App.css';\nimport Header from \"./components/Header\"\nimport Figure from \"./components/Figure\"\nimport WrongLetters from \"./components/WrongLetters\"\nimport Word from \"./components/Word\"\nimport Popup from \"./components/Popup\"\nimport Notification from \"./components/Notification\"\nimport {showNotification as show} from \"./helpers/helpers\"\n\nconst selectedWord = ' '\n\nfunction App() {\n  const [playable, setPlayable] = useState(false);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode} = event;\n    \t\tif (playable && keyCode >= 65 && keyCode <= 90) {\n    \t\t\tconst letter = key.toLowerCase();\n\n    \t\t\tif (selectedWord.includes(letter)) {\n    \t\t\t\tif (!correctLetters.includes(letter)) {\n    \t\t\t\t\tsetCorrectLetters(currentLetters => [...currentLetters, letter]);\n    \t\t\t\t} else {\n    \t\t\t\t\tshow(setShowNotification);\n    \t\t\t\t}\n    \t\t\t} else {\n    \t\t\t\tif (!wrongLetters.includes(letter)) {\n    \t\t\t\t\tsetWrongLetters(wrongLetters => [...wrongLetters, letter]);\n    \t\t\t\t} else {\n    \t\t\t\t\tshow(setShowNotification);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    }\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n\n  function playAgain(i) {\n    setPlayable(false);\n\n    // Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    selectedWord = \" \";\n  }\n\n\n\n  return (\n    <>\n    <Header />\n    <div className=\"game-container\">\n      <Figure wrongLetters={wrongLetters} />\n      <WrongLetters wrongLetters={wrongLetters} />\n      <Word selectedWord={selectedWord} correctLetters={correctLetters}/>\n    </div>\n    <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\n    <Notification showNotification={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}