{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathangirma/code/hangman-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Figure from \"./components/Figure\";\nimport WrongLetters from \"./components/WrongLetters\";\nimport Word from \"./components/Word\";\nimport Popup from \"./components/Popup\";\nimport Notification from \"./components/Notification\";\nimport { showNotification as show } from \"./helpers/helpers\";\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\nlet playable = true;\nconst correctLetters = [];\nconst wrongLetters = [];\n\nfunction App() {\n  _s();\n\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true); // Empty Arrays\n\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Figure, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n        wrongLetters: wrongLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        selectedWord: selectedWord,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      correctLetters: correctLetters,\n      wrongLetters: wrongLetters,\n      selectedWord: selectedWord,\n      setPlayable: setPlayable,\n      playAgain: playAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      showNotification: showNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"01339m8ADmuWJa1yHmNYefcuCX0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonathangirma/code/hangman-react/src/App.js"],"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Popup","Notification","showNotification","show","words","selectedWord","Math","floor","random","length","playable","correctLetters","wrongLetters","App","setPlayable","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\"\nimport './App.css';\nimport Header from \"./components/Header\"\nimport Figure from \"./components/Figure\"\nimport WrongLetters from \"./components/WrongLetters\"\nimport Word from \"./components/Word\"\nimport Popup from \"./components/Popup\"\nimport Notification from \"./components/Notification\"\nimport {showNotification as show} from \"./helpers/helpers\"\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nlet playable = true;\n\nconst correctLetters = [];\nconst wrongLetters = [];\n\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode} = event;\n    \t\tif (playable && keyCode >= 65 && keyCode <= 90) {\n    \t\t\tconst letter = key.toLowerCase();\n\n    \t\t\tif (selectedWord.includes(letter)) {\n    \t\t\t\tif (!correctLetters.includes(letter)) {\n    \t\t\t\t\tsetCorrectLetters(currentLetters => [...currentLetters, letter]);\n    \t\t\t\t} else {\n    \t\t\t\t\tshow(setShowNotification);\n    \t\t\t\t}\n    \t\t\t} else {\n    \t\t\t\tif (!wrongLetters.includes(letter)) {\n    \t\t\t\t\tsetWrongLetters(wrongLetters => [...wrongLetters, letter]);\n    \t\t\t\t} else {\n    \t\t\t\t\tshow(setShowNotification);\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    }\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n\n  function playAgain() {\n    setPlayable(true);\n\n    // Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n\n  }\n  return (\n    <>\n    <Header />\n    <div className=\"game-container\">\n      <Figure wrongLetters={wrongLetters} />\n      <WrongLetters wrongLetters={wrongLetters} />\n      <Word selectedWord={selectedWord} correctLetters={correctLetters}/>\n    </div>\n    <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\n    <Notification showNotification={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}