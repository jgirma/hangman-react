{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jonathangirma/code/hangman-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Figure from \"./components/Figure\";\nimport WrongLetters from \"./components/WrongLetters\";\nimport Word from \"./components/Word\";\nimport Popup from \"./components/Popup\";\nimport Notification from \"./components/Notification\";\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\nlet playable = true;\nconst correctLetters = [];\nconst wrongLetters = [];\nuseEffect(() => {\n  const handleKeydown = event => {\n    const {\n      key,\n      keyCode\n    } = event;\n\n    if (playable && keyCode >= 65 && keyCode <= 90) {\n      const letter = key.toLowerCase();\n\n      if (selectedWord.includes(letter)) {\n        if (!correctLetters.includes(letter)) {\n          setCorrectLetters(currentLetters => [...currentLetters, letter]);\n        } else {// showNotification();\n        }\n      } else {\n        if (!wrongLetters.includes(letter)) {\n          setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n          updateWrongLettersEl();\n        } else {\n          showNotification();\n        }\n      }\n    }\n  };\n});\nwindow.addEventListener('keydown', e => {\n  i;\n});\n\nfunction App() {\n  _s();\n\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Figure, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Word, {\n        selectedWord: selectedWord,\n        correctLetters: correctLetters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"3jKUx5/LX6iaXx7pM+wX+jrcexQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonathangirma/code/hangman-react/src/App.js"],"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","Popup","Notification","words","selectedWord","Math","floor","random","length","playable","correctLetters","wrongLetters","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","setCorrectLetters","currentLetters","setWrongLetters","updateWrongLettersEl","showNotification","window","addEventListener","e","i","App","setPlayable"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,MAAMC,KAAK,GAAG,CAAC,aAAD,EAAgB,aAAhB,EAA+B,WAA/B,EAA4C,QAA5C,CAAd;AAEA,IAAIC,YAAY,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,KAAK,CAACK,MAAjC,CAAD,CAAxB;AAEA,IAAIC,QAAQ,GAAG,IAAf;AAEA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEAf,SAAS,CAAC,MAAM;AACd,QAAMgB,aAAa,GAAGC,KAAK,IAAI;AAC7B,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAkBF,KAAxB;;AACA,QAAIJ,QAAQ,IAAIM,OAAO,IAAI,EAAvB,IAA6BA,OAAO,IAAI,EAA5C,EAAgD;AAC/C,YAAMC,MAAM,GAAGF,GAAG,CAACG,WAAJ,EAAf;;AAEA,UAAIb,YAAY,CAACc,QAAb,CAAsBF,MAAtB,CAAJ,EAAmC;AAClC,YAAI,CAACN,cAAc,CAACQ,QAAf,CAAwBF,MAAxB,CAAL,EAAsC;AACrCG,UAAAA,iBAAiB,CAACC,cAAc,IAAI,CAAC,GAAGA,cAAJ,EAAoBJ,MAApB,CAAnB,CAAjB;AAEA,SAHD,MAGO,CACN;AACA;AACD,OAPD,MAOO;AACN,YAAI,CAACL,YAAY,CAACO,QAAb,CAAsBF,MAAtB,CAAL,EAAoC;AACnCK,UAAAA,eAAe,CAACV,YAAY,IAAI,CAAC,GAAGA,YAAJ,EAAkBK,MAAlB,CAAjB,CAAf;AAEAM,UAAAA,oBAAoB;AACpB,SAJD,MAIO;AACNC,UAAAA,gBAAgB;AAChB;AACD;AACD;AACF,GAtBD;AAuBD,CAxBQ,CAAT;AA0BAC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,CAAC,IAAI;AACvCC,EAAAA,CAAC;AACD,CAFD;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACnB,QAAD,EAAWoB,WAAX,IAA0BlC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACe,cAAD,EAAiBS,iBAAjB,IAAsCxB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACgB,YAAD,EAAeU,eAAf,IAAkC1B,QAAQ,CAAC,EAAD,CAAhD;AACA,sBACE;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,YAAY,EAAES,YAApB;AAAkC,QAAA,cAAc,EAAEM;AAAlD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADF;AAUD;;GAdQkB,G;;KAAAA,G;AAgBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect} from \"react\"\nimport './App.css';\nimport Header from \"./components/Header\"\nimport Figure from \"./components/Figure\"\nimport WrongLetters from \"./components/WrongLetters\"\nimport Word from \"./components/Word\"\nimport Popup from \"./components/Popup\"\nimport Notification from \"./components/Notification\"\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\n\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nlet playable = true;\n\nconst correctLetters = [];\nconst wrongLetters = [];\n\nuseEffect(() => {\n  const handleKeydown = event => {\n    const { key, keyCode} = event;\n  \t\tif (playable && keyCode >= 65 && keyCode <= 90) {\n  \t\t\tconst letter = key.toLowerCase();\n\n  \t\t\tif (selectedWord.includes(letter)) {\n  \t\t\t\tif (!correctLetters.includes(letter)) {\n  \t\t\t\t\tsetCorrectLetters(currentLetters => [...currentLetters, letter]);\n\n  \t\t\t\t} else {\n  \t\t\t\t\t// showNotification();\n  \t\t\t\t}\n  \t\t\t} else {\n  \t\t\t\tif (!wrongLetters.includes(letter)) {\n  \t\t\t\t\tsetWrongLetters(wrongLetters => [...wrongLetters, letter]);\n\n  \t\t\t\t\tupdateWrongLettersEl();\n  \t\t\t\t} else {\n  \t\t\t\t\tshowNotification();\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  }\n});\n\nwindow.addEventListener('keydown', e => {\n\ti\n});\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  return (\n    <>\n    <Header />\n    <div className=\"game-container\">\n      <Figure />\n      <WrongLetters />\n      <Word selectedWord={selectedWord} correctLetters={correctLetters}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}